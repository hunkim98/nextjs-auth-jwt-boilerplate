import axios from "axios";
import type {
  GetServerSideProps,
  GetStaticPropsResult,
  InferGetServerSidePropsType,
  NextPage,
  NextPageContext,
} from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  // if you want to use getServerSideProps in next js,
  // you must specify the whole api since the client server will execute it
  const sample = (await axios.get("http://localhost:5000/api")).data;
  return {
    props: {
      sample,
    },
  };
};

const Home: NextPage = ({
  sample,
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const [accessToken, setAccessToken] = useState(undefined);
  useEffect(() => {
    console.log("server", sample);
    axios.get("/api/auth/refresh").then((res) => {
      console.log(res.data);
      setAccessToken(res.data);
    });
  }, []);
  const onSubmit = (event: React.SyntheticEvent) => {
    event.preventDefault();
    const target = event.target as typeof event.target & {
      email: { value: string };
      password: { value: string };
      id: { value: string };
      name: { value: string };
    };
    const id = target.id.value;
    const name = target.name.value;
    const email = target.email.value; // typechecks!
    const password = target.password.value; // typechecks!
    axios
      .post("/api/auth/register", {
        username: id,
        nickname: name,
        email: email,
        password: password,
      })
      .then((res) => {
        console.log(res.data);
        const accessToken = res.data;
        axios.defaults.headers.common[
          "Authorization"
        ] = `Bearer ${accessToken}`;
      });
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>{accessToken ? "Loginned already" : "Please login"}</h1>
        <form onSubmit={onSubmit}>
          <label>
            ID:
            <input type="text" name="id"></input>
          </label>
          <label>
            PASSWORD:
            <input type="password" name="password"></input>
          </label>
          <label>
            NAME:
            <input type="text" name="name"></input>
          </label>
          <label>
            EMAIL:
            <input type="email" name="email"></input>
          </label>
          <div>
            <input type="submit" value="log in" />
          </div>
        </form>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

export default Home;
